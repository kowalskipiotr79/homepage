h1 {
  color: rgb(248, 215, 215);
}
body {
  background-color: #a3b18a;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}
p {
  font-style: oblique;
}
/* 
nav a {
  color: khaki;
} */
/* 
a {
  color: darkorange !important;
} */

/* 
do nazywania klas dobrze jest stosowac tzw BEM - Block Element Modifier
ktory pozwala jednoznacznie okreslic ktorych elementow w dokumencie dotyczy
dana klasa. Notacja jest nastepujaca:
Block--Element--Modifier
*/
/* 
.header {
  position: sticky;
  width: 100%;
} */

.header--nav {
  background-color: #599bc2;
  /* color: white; */
  border: 2px solid #fff;
  /* border-radius: 15px; */
  padding: 15px;
  /* Dzieki position: fixed element bedzie ciagle w jednym miejscu na stronie.
     Mozna tego uzyc np. dla menu, ktore bez wzgledu na przewijanie strony
     ciagle bedzie w jednym miejscu np. na gorze strony.
     Zeby takie menu ustawic idelanie na gorze i przylegajace do lewej to trzeba
     ustawic top i left na 0px
  */
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100%;
  /* aby rzeczy z ustawionym opacity na inne niz 0 nie byly widoczne podczas przewijania
  pod menu, trzeba menu wycignac na wierzch za pomoca parametru z-index. Zapewnia on to,
  ze element z najwieksza wartoscia bedzie naj wierzchu, czyli nic go nie przykryje.
  */
  z-index: 1000;
}

.nav--a {
  border: 2px solid lemonchiffon;
  padding: 4px;
  border-radius: 5px;
  text-decoration: none;
  color: #000100;
  font-size: large;
  background-color: #ddfff7;
}

.header--h1 {
  /* Parametr auto pozwala na rownomierne rozlozenie elementu z display: block na stronie (wycentrowanie) biorac
     pod uwage jego wymiary i wielkosc marginesow. Nie jest to jednak najlepsza metoda centrowania.
  */
  margin: 15px auto;
  margin-top: 100px;
  width: 50vw;
  color: #779085;
  background-color: rgb(222, 255, 219);
  opacity: 0.4;
  border: 2px dotted #fffff5;
  font-family: monospace;
}

.section {
  padding: 10px 0px;
  border-top: 2px solid #dad7cd;
  width: 95vw;
  margin: 0px auto;
  margin-bottom: 10px;
  /* position: relative pozwala aby dzieci tego elementu mogly sie ustawiac wzgledem niego
  rowniez za pomoca wlasnosci position: static (domyslna), absolute (na gorze), fixed (na stale
  w jednym miejscu), sticky (przyklejone - podczas przewijania rodzica element ciagle jest 
  widoczny).
  */
  position: relative;
}

.section--h2 {
  /* dzieki temu obiekt na zewnatrz zachowuje wymiary a paddingi nie powiekszaja go
     wiec nie trzeba sie martwic o przeliczanie i sumowanie ze soba borderow i paddingow
     zeby sie zmiescic w jakiejs wielkosci
  */
  box-sizing: border-box;
  margin-left: 5px;
  margin-right: 5px;
  /* color: #242038; */
  color: #a3b18a;
  opacity: 0.4;
  border: 2px dotted #fffff5;
  border-radius: 50%;
  width: 80px;
  height: 80px;
  padding-top: 28px;
  background-color: rgb(222, 255, 219);
  font-size: small;
  text-align: center;
  /* display: inline-block pozwala aby elementy inline-owe (display: inline) mogly miec
     wlasnosci elementow blokowych (display: block) i odwrotnie tez.
     Dzieki temu mozna rowniez np. ustawic w jednej linii obok siebie element h2 z elementem article.
     Normalnie poniewaz h2 i article sa blokowe (display: block), to article schodzil 
     by ponizej h2. 
     Natomiast elementy typu inline nie maja mozliwosci definiowania np. swoich wymiarow.
     Kiedy jednak nadamy im wlasnosc inline-block zyskuja taka mozliwosc.
  */
  /* display: inline-block; */
  /* pozwala aby element przykleil sie do elementu rodzica i np. ten naglowek h2 podczas
   przewijania sekcji ktora jest jego rodzicem bedzie ciagle widoczny. Jednak aby to dzialalo 
   konieczne jest ustawienie parametru top ponizej*/
  position: sticky;
  top: 58px;
  /* wlasnosc float pozwala na ustawienie oplywania elementu, a wiec inne elementy bedace
    w jego sasiedztwie moga go oplywac np. z lewej lub prawej strony 
  */
  float: left;
}

.section--lesson-article {
  border: 2px solid;
  border-color: #dad7cd;
  border-radius: 15px;
  padding: 10px;
  margin: 10px 0px 0px 0px;
  background-color: rgba(
    89,
    195,
    195,
    0.4
  ); /* ostatni parametr oznacza opacity */
  /* display: inline-block; */
  /* max-width: 1200px; */
  /* max-height: 300px; */
  /* overflow mowi co sie ma dziac jezeli zawartosc danego elementu nie miesci sie w nim.
    auto - ustawi csroll, hidden - utnie zawartosc, visible (domyslny) pozostawi tresc wystajaca.
    */
  overflow: auto;
  text-align: justify;
}

.article--h3 {
  margin: 0px;
  color: #c15959;
}

.footer {
  background-color: #599bc2;
  /* color: white; */
  border: 2px solid #fff;
  border-radius: 15px;
  padding: 15px;
}
